<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DateInThePastMsg" xml:space="preserve">
    <value>Дата не может быть в прошлом!</value>
  </data>
  <data name="EmptyDescriptionMsg" xml:space="preserve">
    <value>Описание не может быть пустым!</value>
  </data>
  <data name="EmptyNameMsg" xml:space="preserve">
    <value>Имя не может быть пустым!</value>
  </data>
  <data name="NameShouldBeUniqueMsg" xml:space="preserve">
    <value>Имя должно быть уникальным!</value>
  </data>
  <data name="NotFoundMsg" xml:space="preserve">
    <value>Не найдено!</value>
  </data>
  <data name="NullEntityMsg" xml:space="preserve">
    <value>Сущность не может быть пустой!</value>
  </data>
  <data name="OperateOnNullEntityMsg" xml:space="preserve">
    <value>Невозможно проводить операции над пустой сущностью!</value>
  </data>
  <data name="EmailIsTakenMsg" xml:space="preserve">
    <value>Данный email уже занят!</value>
  </data>
  <data name="InvalidProfileInfoMsg" xml:space="preserve">
    <value>Профиль содержит некорректную информацию!</value>
  </data>
  <data name="NegativeAttendancesMsg" xml:space="preserve">
    <value>Число посещений должно быть больше 0!</value>
  </data>
  <data name="NegativeCostMsg" xml:space="preserve">
    <value>Стоимость должна быть больше либо 0!</value>
  </data>
  <data name="NegativeDaysMsg" xml:space="preserve">
    <value>Число дней должно быть больше 0!</value>
  </data>
  <data name="NegativeStopDaysMsg" xml:space="preserve">
    <value>Число дней для остановки должно быть больше либо 0!</value>
  </data>
  <data name="CurrencySymbol" xml:space="preserve">
    <value>$</value>
  </data>
  <data name="NegativeVisitsCountMsg" xml:space="preserve">
    <value>Число посещений должно быть больше либо 0!</value>
  </data>
  <data name="VisitsMoreThanAbonementAttendancesMsg" xml:space="preserve">
    <value>Число посещений должно быть не больше чем то, что предусмотрено абнонементом!</value>
  </data>
  <data name="MaximumMinutesMsg" xml:space="preserve">
    <value>Продолжительность занятия должна быть меньше ілі 180 мінут!</value>
  </data>
  <data name="NotUniqueAddressNameMsg" xml:space="preserve">
    <value>Место проведения занятий должно иметь уникальное имя в указанном адресе!</value>
  </data>
  <data name="NegativeBalance" xml:space="preserve">
    <value>Баланс не может быть ниже 0!</value>
  </data>
  <data name="UniqueNameForSpecialization" xml:space="preserve">
    <value>Сервис должен иметь уникальное имя для специализации!</value>
  </data>
  <data name="NegativePriceMsg" xml:space="preserve">
    <value>Цена должна быть больше либо 0!</value>
  </data>
  <data name="NegativeMinutesMsg" xml:space="preserve">
    <value>Продолжительность занятия должна быть больше 0!</value>
  </data>
  <data name="CoefficientBoundsMsg" xml:space="preserve">
    <value>Коэффициент должен быть между 0 и 2!</value>
  </data>
  <data name="NullTextMsg" xml:space="preserve">
    <value>Текст не может быть пустым!</value>
  </data>
  <data name="DateInTheFutureMsg" xml:space="preserve">
    <value>Дата не может быть в будущем!</value>
  </data>
  <data name="AlreadyExistsMsg" xml:space="preserve">
    <value>Уже существует!</value>
  </data>
  <data name="IncorrectDayOfWeekMsg" xml:space="preserve">
    <value>Некорректный день!</value>
  </data>
  <data name="MinVisitorCapacityMsg" xml:space="preserve">
    <value>Количество посетителей должно быть больше 0!</value>
  </data>
  <data name="TimeCrossesMsg" xml:space="preserve">
    <value>Время, выбранное вами, уже занято</value>
  </data>
  <data name="WrongDayOfWeekMsg" xml:space="preserve">
    <value>День, который вы выбрали, не тот, который определён еженедельным занятием</value>
  </data>
  <data name="EmptyInfoMsg" xml:space="preserve">
    <value>Информация не может быть пустым!</value>
  </data>
  <data name="EmptyAddressMsg" xml:space="preserve">
    <value>Адрес не может быть пустым!</value>
  </data>
</root>